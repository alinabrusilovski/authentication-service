spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=postgres
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

server.port=${SERVER_PORT}
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

auth.issuer=${ISSUER}
auth.private-key=${PRIVATE_KEY}
auth.public-key=${PUBLIC_KEY}

auth.refresh-token-lifetime-value=${REFRESH_TOKEN_LIFETIME_VALUE}

security.jwks-uri=${JWKS_URL}

auth.reset-pswrd-link=${RESET_PSWRD_LINK}
auth.password-reset-token-expiry-hours=${PSWRD_RESET_TOKEN_EXPIRITY}

#"rabbitmq" / "kafka" / "redis"
email.publisher.type=kafka

#Rabbit
email.rabbitmq.host=${RABBIT_HOST}
email.rabbitmq.port=${RABBIT_PORT}
email.rabbitmq.username=${RABBIT_USERNAME}
email.rabbitmq.password=${RABBIT_PASSWORD}
email.rabbitmq.queue=${RABBIT_QUEUE}

#Redis
email.redis.host=localhost
email.redis.port=6379
email.redis.password=${REDIS_PASSWORD}
emailservice.redis.channel=emailChannel

#Kafka
email.kafka.topic=emailTopic
email.kafka.bootstrap-servers=kafka:9092
#email.kafka.consumer.group-id=email-group
#email.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#email.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
